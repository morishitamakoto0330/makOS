[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_task_now
	EXTERN	_memman_alloc_4k
	EXTERN	_fifo32_init
	EXTERN	_timer_alloc
	EXTERN	_timer_init
	EXTERN	_timer_settime
	EXTERN	_file_readfat
	EXTERN	_putfonts8_asc_sht
	EXTERN	_io_cli
	EXTERN	_fifo32_status
	EXTERN	_fifo32_get
	EXTERN	_io_sti
	EXTERN	_boxfill8
	EXTERN	_sheet_refresh
	EXTERN	_sprintf
	EXTERN	_memman_total
	EXTERN	_file_loadfile
	EXTERN	_memman_free_4k
	EXTERN	_io_hlt
	EXTERN	_task_sleep
[FILE "console.c"]
[SECTION .data]
LC0:
	DB	">",0x00
LC1:
	DB	" ",0x00
LC2:
	DB	"mem",0x00
LC3:
	DB	"total   %dMB",0x00
LC4:
	DB	"free %dKB",0x00
LC5:
	DB	"cls",0x00
LC6:
	DB	"ls",0x00
LC7:
	DB	"filename.ext   %7d",0x00
LC8:
	DB	"cat ",0x00
LC9:
	DB	"File not found.",0x00
LC10:
	DB	"more ",0x00
LC11:
	DB	":",0x00
LC12:
	DB	"Bad command.",0x00
[SECTION .text]
	GLOBAL	_console_task
_console_task:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	EDI,16
	PUSH	EBX
	SUB	ESP,612
	CALL	_task_now
	PUSH	11520
	MOV	DWORD [-596+EBP],EAX
	PUSH	3932160
	MOV	EAX,DWORD [20+EBP]
	SHR	EAX,4
	MOV	DWORD [-600+EBP],28
	MOV	DWORD [-604+EBP],-1
	MOV	DWORD [-608+EBP],EAX
	CALL	_memman_alloc_4k
	PUSH	DWORD [-596+EBP]
	MOV	DWORD [-624+EBP],EAX
	MOV	EBX,DWORD [-596+EBP]
	LEA	EAX,DWORD [-524+EBP]
	ADD	EBX,16
	PUSH	EAX
	PUSH	128
	PUSH	EBX
	CALL	_fifo32_init
	CALL	_timer_alloc
	PUSH	1
	PUSH	EBX
	PUSH	EAX
	MOV	DWORD [-592+EBP],EAX
	CALL	_timer_init
	ADD	ESP,36
	PUSH	50
	PUSH	DWORD [-592+EBP]
	CALL	_timer_settime
	PUSH	1049088
	PUSH	DWORD [-624+EBP]
	CALL	_file_readfat
	PUSH	1
	PUSH	LC0
	PUSH	0
	PUSH	7
	PUSH	28
	PUSH	8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	ADD	ESP,44
L2:
	CALL	_io_cli
	MOV	ESI,DWORD [-596+EBP]
	ADD	ESI,16
	PUSH	ESI
	CALL	_fifo32_status
	POP	EDX
	TEST	EAX,EAX
	JE	L183
	PUSH	ESI
	CALL	_fifo32_get
	MOV	EBX,EAX
	CALL	_io_sti
	POP	EAX
	CMP	EBX,1
	JLE	L184
L7:
	CMP	EBX,2
	JE	L185
L12:
	CMP	EBX,3
	JE	L186
L13:
	LEA	EAX,DWORD [-256+EBX]
	CMP	EAX,255
	JA	L14
	CMP	EBX,264
	JE	L187
	CMP	EBX,266
	JE	L188
	CMP	EDI,DWORD [16+EBP]
	JAE	L14
	MOV	EAX,EDI
	MOV	EDX,8
	MOV	ESI,EDX
	PUSH	1
	CDQ
	IDIV	ESI
	MOV	BYTE [-556+EBP],BL
	MOV	BYTE [-590+EBP+EAX*1],BL
	LEA	EAX,DWORD [-556+EBP]
	PUSH	EAX
	PUSH	0
	PUSH	7
	PUSH	DWORD [-600+EBP]
	PUSH	EDI
	ADD	EDI,8
	PUSH	DWORD [8+EBP]
	MOV	BYTE [-555+EBP],0
	CALL	_putfonts8_asc_sht
L182:
	ADD	ESP,28
L14:
	CMP	DWORD [-604+EBP],0
	JS	L156
	MOV	EAX,DWORD [-600+EBP]
	ADD	EAX,15
	PUSH	EAX
	LEA	EAX,DWORD [7+EDI]
	PUSH	EAX
	PUSH	DWORD [-600+EBP]
	PUSH	EDI
	MOVZX	EAX,BYTE [-604+EBP]
	PUSH	EAX
	MOV	EAX,DWORD [8+EBP]
	PUSH	DWORD [4+EAX]
	PUSH	DWORD [EAX]
	CALL	_boxfill8
	ADD	ESP,28
L156:
	MOV	EAX,DWORD [-600+EBP]
	ADD	EAX,16
	PUSH	EAX
	LEA	EAX,DWORD [8+EDI]
	PUSH	EAX
	PUSH	DWORD [-600+EBP]
	PUSH	EDI
	PUSH	DWORD [8+EBP]
	CALL	_sheet_refresh
	ADD	ESP,20
	JMP	L2
L188:
	PUSH	1
	LEA	ESI,DWORD [-588+EBP]
	PUSH	LC1
	PUSH	0
	PUSH	7
	PUSH	DWORD [-600+EBP]
	PUSH	EDI
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	MOV	EAX,EDI
	MOV	EDX,8
	MOV	EDI,LC2
	MOV	EBX,EDX
	CDQ
	IDIV	EBX
	MOV	BYTE [-590+EBP+EAX*1],0
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-600+EBP]
	CALL	_cons_newline
	MOV	ECX,4
	CLD
	MOV	DWORD [-600+EBP],EAX
	REPE
	CMPSB
	SETA	DL
	SETB	AL
	ADD	ESP,44
	CMP	DL,AL
	JNE	L19
	MOV	EAX,DWORD [12+EBP]
	LEA	EBX,DWORD [-556+EBP]
	SHR	EAX,20
	PUSH	EAX
	PUSH	LC3
	PUSH	EBX
	CALL	_sprintf
	PUSH	30
	PUSH	EBX
	PUSH	0
	PUSH	7
	PUSH	DWORD [-600+EBP]
	PUSH	8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	ADD	ESP,40
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-600+EBP]
	CALL	_cons_newline
	PUSH	3932160
	MOV	DWORD [-600+EBP],EAX
	CALL	_memman_total
	SHR	EAX,10
	MOV	DWORD [ESP],EAX
	PUSH	LC4
	PUSH	EBX
	CALL	_sprintf
	PUSH	30
	PUSH	EBX
	PUSH	0
	PUSH	7
	PUSH	DWORD [-600+EBP]
	PUSH	8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	ADD	ESP,56
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-600+EBP]
	CALL	_cons_newline
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	EAX
	MOV	DWORD [-600+EBP],EAX
	CALL	_cons_newline
	ADD	ESP,32
	MOV	DWORD [-600+EBP],EAX
L20:
	PUSH	1
	MOV	EDI,16
	PUSH	LC0
	PUSH	0
	PUSH	7
	PUSH	DWORD [-600+EBP]
	PUSH	8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	JMP	L182
L19:
	CLD
	LEA	ESI,DWORD [-588+EBP]
	MOV	EDI,LC5
	MOV	ECX,4
	REPE
	CMPSB
	JNE	L21
	MOV	EAX,DWORD [20+EBP]
	MOV	ESI,28
	ADD	EAX,28
	CMP	ESI,EAX
	JAE	L158
L31:
	MOV	ECX,DWORD [16+EBP]
	MOV	DWORD [-620+EBP],8
	ADD	ECX,8
	CMP	DWORD [-620+EBP],ECX
	JAE	L160
L30:
	MOV	EDX,DWORD [8+EBP]
	MOV	EAX,ESI
	IMUL	EAX,DWORD [4+EDX]
	ADD	EAX,DWORD [-620+EBP]
	MOV	EDX,DWORD [EDX]
	MOV	BYTE [EAX+EDX*1],0
	INC	DWORD [-620+EBP]
	CMP	DWORD [-620+EBP],ECX
	JB	L30
L160:
	MOV	EAX,DWORD [20+EBP]
	INC	ESI
	ADD	EAX,28
	CMP	ESI,EAX
	JB	L31
L158:
	MOV	EAX,DWORD [20+EBP]
	ADD	EAX,28
	PUSH	EAX
	MOV	EAX,DWORD [16+EBP]
	ADD	EAX,8
	PUSH	EAX
	PUSH	28
	PUSH	8
	PUSH	DWORD [8+EBP]
	CALL	_sheet_refresh
	ADD	ESP,20
	MOV	DWORD [-600+EBP],28
	JMP	L20
L21:
	CLD
	LEA	ESI,DWORD [-588+EBP]
	MOV	EDI,LC6
	MOV	ECX,3
	REPE
	CMPSB
	JNE	L33
	MOV	DWORD [-620+EBP],0
	XOR	EBX,EBX
L47:
	MOV	AL,BYTE [1058304+EBX]
	TEST	AL,AL
	JE	L35
	CMP	AL,-27
	JE	L36
	TEST	BYTE [1058315+EBX],24
	JNE	L36
	PUSH	DWORD [1058332+EBX]
	PUSH	LC7
	LEA	EAX,DWORD [-556+EBP]
	PUSH	EAX
	XOR	ESI,ESI
	CALL	_sprintf
	LEA	EDX,DWORD [1058304+EBX]
	ADD	ESP,12
L45:
	MOV	AL,BYTE [EDX]
	INC	EDX
	MOV	BYTE [-556+EBP+ESI*1],AL
	INC	ESI
	CMP	ESI,7
	JLE	L45
	CMP	BYTE [1058312+EBX],32
	JE	L189
L46:
	MOV	AL,BYTE [1058312+EBX]
	MOV	BYTE [-547+EBP],AL
	MOV	AL,BYTE [1058313+EBX]
	MOV	BYTE [-546+EBP],AL
	MOV	AL,BYTE [1058314+EBX]
	PUSH	30
	MOV	BYTE [-545+EBP],AL
	LEA	EAX,DWORD [-556+EBP]
	PUSH	EAX
	PUSH	0
	PUSH	7
	PUSH	DWORD [-600+EBP]
	PUSH	8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-600+EBP]
	CALL	_cons_newline
	ADD	ESP,44
	MOV	DWORD [-600+EBP],EAX
L36:
	INC	DWORD [-620+EBP]
	ADD	EBX,32
	CMP	DWORD [-620+EBP],223
	JLE	L47
L35:
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-600+EBP]
L181:
	CALL	_cons_newline
	ADD	ESP,16
	MOV	DWORD [-600+EBP],EAX
	JMP	L20
L189:
	MOV	BYTE [-548+EBP],32
	JMP	L46
L33:
	CLD
	LEA	ESI,DWORD [-588+EBP]
	MOV	EDI,LC8
	MOV	ECX,4
	REPE
	CMPSB
	JNE	L49
	XOR	ESI,ESI
L54:
	MOV	BYTE [-556+EBP+ESI*1],32
	INC	ESI
	CMP	ESI,10
	JLE	L54
	XOR	ESI,ESI
	MOV	DWORD [-620+EBP],4
	CMP	BYTE [-584+EBP],0
	JE	L56
L63:
	MOV	EAX,DWORD [-620+EBP]
	MOV	DL,BYTE [-588+EBP+EAX*1]
	CMP	DL,46
	JE	L190
L60:
	LEA	EAX,DWORD [-97+EDX]
	MOV	BYTE [-556+EBP+ESI*1],DL
	CMP	AL,25
	JA	L62
	LEA	EAX,DWORD [-32+EDX]
	MOV	BYTE [-556+EBP+ESI*1],AL
L62:
	INC	ESI
L57:
	INC	DWORD [-620+EBP]
	CMP	ESI,10
	JG	L56
	MOV	EDX,DWORD [-620+EBP]
	CMP	BYTE [-588+EBP+EDX*1],0
	JNE	L63
L56:
	MOV	DWORD [-620+EBP],0
	XOR	ECX,ECX
L77:
	CMP	BYTE [1058304+ECX],0
	JE	L65
	TEST	BYTE [1058315+ECX],24
	JNE	L75
	XOR	ESI,ESI
L76:
	MOVZX	EDX,BYTE [1058304+ECX+ESI*1]
	MOVSX	EAX,BYTE [-556+EBP+ESI*1]
	CMP	EDX,EAX
	JNE	L75
	INC	ESI
	CMP	ESI,10
	JLE	L76
L65:
	CMP	DWORD [-620+EBP],223
	JG	L127
	MOV	EBX,DWORD [-620+EBP]
	SAL	EBX,5
	CMP	BYTE [1058304+EBX],0
	JE	L127
	PUSH	DWORD [1058332+EBX]
	PUSH	3932160
	XOR	ESI,ESI
	MOV	EDI,8
	CALL	_memman_alloc_4k
	PUSH	1064448
	PUSH	DWORD [-624+EBP]
	PUSH	EAX
	MOV	DWORD [-616+EBP],EAX
	PUSH	DWORD [1058332+EBX]
	MOVZX	EAX,WORD [1058330+EBX]
	PUSH	EAX
	CALL	_file_loadfile
	ADD	ESP,28
	CMP	ESI,DWORD [1058332+EBX]
	JAE	L170
L95:
	MOV	EBX,DWORD [-616+EBP]
	MOV	AL,BYTE [ESI+EBX*1]
	MOV	BYTE [-556+EBP],AL
	CMP	AL,9
	MOV	BYTE [-555+EBP],0
	JE	L84
	MOV	AL,BYTE [-556+EBP]
	CMP	AL,10
	JE	L178
	CMP	AL,13
	JE	L81
	PUSH	1
	LEA	EAX,DWORD [-556+EBP]
	PUSH	EAX
	PUSH	0
	PUSH	7
	PUSH	DWORD [-600+EBP]
	PUSH	EDI
	ADD	EDI,8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	ADD	ESP,28
	MOV	EAX,DWORD [16+EBP]
	ADD	EAX,8
	CMP	EDI,EAX
	JE	L178
L81:
	MOV	EAX,DWORD [-620+EBP]
	INC	ESI
	SAL	EAX,5
	CMP	ESI,DWORD [1058332+EAX]
	JB	L95
L170:
	SAL	DWORD [-620+EBP],5
	MOV	ESI,DWORD [-620+EBP]
	PUSH	DWORD [1058332+ESI]
L180:
	PUSH	DWORD [-616+EBP]
	PUSH	3932160
	CALL	_memman_free_4k
	ADD	ESP,12
	JMP	L20
L178:
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-600+EBP]
	MOV	EDI,8
	CALL	_cons_newline
	ADD	ESP,16
	MOV	DWORD [-600+EBP],EAX
	JMP	L81
L84:
	PUSH	1
	PUSH	LC1
	PUSH	0
	PUSH	7
	PUSH	DWORD [-600+EBP]
	PUSH	EDI
	ADD	EDI,8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	ADD	ESP,28
	MOV	EAX,DWORD [16+EBP]
	ADD	EAX,8
	CMP	EDI,EAX
	JE	L191
L87:
	LEA	EAX,DWORD [-8+EDI]
	AND	EAX,31
	JNE	L84
	JMP	L81
L191:
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-600+EBP]
	MOV	EDI,8
	CALL	_cons_newline
	ADD	ESP,16
	MOV	DWORD [-600+EBP],EAX
	JMP	L87
L127:
	PUSH	15
	PUSH	LC9
	PUSH	0
	PUSH	7
	PUSH	DWORD [-600+EBP]
	PUSH	8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-600+EBP]
	CALL	_cons_newline
	ADD	ESP,44
	MOV	DWORD [-600+EBP],EAX
	JMP	L20
L75:
	INC	DWORD [-620+EBP]
	ADD	ECX,32
	CMP	DWORD [-620+EBP],223
	JLE	L77
	JMP	L127
L190:
	CMP	ESI,8
	JG	L60
	MOV	ESI,8
	JMP	L57
L49:
	CLD
	LEA	ESI,DWORD [-588+EBP]
	MOV	EDI,LC10
	MOV	ECX,5
	REPE
	CMPSB
	JNE	L98
	XOR	ESI,ESI
L103:
	MOV	BYTE [-556+EBP+ESI*1],32
	INC	ESI
	CMP	ESI,10
	JLE	L103
	XOR	ESI,ESI
	MOV	DWORD [-620+EBP],5
	CMP	BYTE [-583+EBP],0
	JE	L105
L112:
	MOV	EAX,DWORD [-620+EBP]
	MOV	DL,BYTE [-588+EBP+EAX*1]
	CMP	DL,46
	JE	L192
L109:
	LEA	EAX,DWORD [-97+EDX]
	MOV	BYTE [-556+EBP+ESI*1],DL
	CMP	AL,25
	JA	L111
	LEA	EAX,DWORD [-32+EDX]
	MOV	BYTE [-556+EBP+ESI*1],AL
L111:
	INC	ESI
L106:
	INC	DWORD [-620+EBP]
	CMP	ESI,10
	JG	L105
	MOV	EDX,DWORD [-620+EBP]
	CMP	BYTE [-588+EBP+EDX*1],0
	JNE	L112
L105:
	MOV	DWORD [-620+EBP],0
	XOR	ECX,ECX
L126:
	CMP	BYTE [1058304+ECX],0
	JE	L114
	TEST	BYTE [1058315+ECX],24
	JNE	L124
	XOR	ESI,ESI
L125:
	MOVZX	EDX,BYTE [1058304+ECX+ESI*1]
	MOVSX	EAX,BYTE [-556+EBP+ESI*1]
	CMP	EDX,EAX
	JNE	L124
	INC	ESI
	CMP	ESI,10
	JLE	L125
L114:
	CMP	DWORD [-620+EBP],223
	JG	L127
	MOV	EBX,DWORD [-620+EBP]
	SAL	EBX,5
	CMP	BYTE [1058304+EBX],0
	JE	L127
	PUSH	DWORD [1058332+EBX]
	PUSH	3932160
	XOR	ESI,ESI
	MOV	EDI,8
	CALL	_memman_alloc_4k
	PUSH	1064448
	PUSH	DWORD [-624+EBP]
	PUSH	EAX
	MOV	DWORD [-616+EBP],EAX
	PUSH	DWORD [1058332+EBX]
	MOVZX	EAX,WORD [1058330+EBX]
	PUSH	EAX
	CALL	_file_loadfile
	ADD	ESP,28
	MOV	DWORD [-612+EBP],0
	CMP	ESI,DWORD [1058332+EBX]
	JAE	L177
L150:
	MOV	EDX,DWORD [-616+EBP]
	XOR	EBX,EBX
	MOV	AL,BYTE [ESI+EDX*1]
	MOV	BYTE [-556+EBP],AL
	CMP	AL,9
	MOV	BYTE [-555+EBP],0
	JE	L133
	MOV	AL,BYTE [-556+EBP]
	CMP	AL,10
	JE	L193
	CMP	AL,13
	JE	L138
	PUSH	1
	LEA	EAX,DWORD [-556+EBP]
	PUSH	EAX
	PUSH	0
	PUSH	7
	PUSH	DWORD [-600+EBP]
	PUSH	EDI
	ADD	EDI,8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	ADD	ESP,28
	MOV	EAX,DWORD [16+EBP]
	ADD	EAX,8
	CMP	EDI,EAX
	JE	L179
L138:
	MOV	EAX,DWORD [-608+EBP]
	DEC	EAX
	CMP	DWORD [-612+EBP],EAX
	JL	L130
	DEC	EBX
	JE	L194
L130:
	MOV	EAX,DWORD [-620+EBP]
	INC	ESI
	SAL	EAX,5
	CMP	ESI,DWORD [1058332+EAX]
	JB	L150
L177:
	SAL	DWORD [-620+EBP],5
	MOV	EBX,DWORD [-620+EBP]
	PUSH	DWORD [1058332+EBX]
	JMP	L180
L194:
	PUSH	1
	PUSH	LC11
	PUSH	0
	PUSH	7
	PUSH	DWORD [-600+EBP]
	PUSH	EDI
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	ADD	ESP,28
L146:
	MOV	EAX,DWORD [-596+EBP]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_get
	POP	EDX
	CMP	EAX,266
	JE	L130
	CALL	_io_hlt
	JMP	L146
L179:
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-600+EBP]
	MOV	EDI,8
	CALL	_cons_newline
	MOV	EBX,1
	INC	DWORD [-612+EBP]
	MOV	DWORD [-600+EBP],EAX
	ADD	ESP,16
	JMP	L138
L193:
	CMP	EDI,8
	JNE	L179
	PUSH	1
	PUSH	LC1
	PUSH	0
	PUSH	7
	PUSH	DWORD [-600+EBP]
	PUSH	8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	ADD	ESP,28
	JMP	L179
L133:
	PUSH	1
	PUSH	LC1
	PUSH	0
	PUSH	7
	PUSH	DWORD [-600+EBP]
	PUSH	EDI
	ADD	EDI,8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	ADD	ESP,28
	MOV	EAX,DWORD [16+EBP]
	ADD	EAX,8
	CMP	EDI,EAX
	JE	L195
L136:
	LEA	EAX,DWORD [-8+EDI]
	AND	EAX,31
	JNE	L133
	JMP	L138
L195:
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-600+EBP]
	MOV	EDI,8
	CALL	_cons_newline
	MOV	EBX,1
	INC	DWORD [-612+EBP]
	MOV	DWORD [-600+EBP],EAX
	ADD	ESP,16
	JMP	L136
L124:
	INC	DWORD [-620+EBP]
	ADD	ECX,32
	CMP	DWORD [-620+EBP],223
	JLE	L126
	JMP	L127
L192:
	CMP	ESI,8
	JG	L109
	MOV	ESI,8
	JMP	L106
L98:
	CMP	BYTE [-588+EBP],0
	JE	L20
	PUSH	12
	PUSH	LC12
	PUSH	0
	PUSH	7
	PUSH	DWORD [-600+EBP]
	PUSH	8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [-600+EBP]
	CALL	_cons_newline
	ADD	ESP,44
	PUSH	DWORD [20+EBP]
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	MOV	DWORD [-600+EBP],EAX
	PUSH	EAX
	JMP	L181
L187:
	CMP	EDI,16
	JLE	L14
	PUSH	1
	PUSH	LC1
	PUSH	0
	PUSH	7
	PUSH	DWORD [-600+EBP]
	PUSH	EDI
	SUB	EDI,8
	PUSH	DWORD [8+EBP]
	CALL	_putfonts8_asc_sht
	JMP	L182
L186:
	PUSH	43
	LEA	EAX,DWORD [7+EDI]
	PUSH	EAX
	MOV	EDX,DWORD [8+EBP]
	PUSH	DWORD [-600+EBP]
	PUSH	EDI
	PUSH	0
	PUSH	DWORD [4+EDX]
	PUSH	DWORD [EDX]
	CALL	_boxfill8
	ADD	ESP,28
	MOV	DWORD [-604+EBP],-1
	JMP	L13
L185:
	MOV	DWORD [-604+EBP],7
	JMP	L12
L184:
	TEST	EBX,EBX
	JE	L8
	PUSH	0
	PUSH	ESI
	PUSH	DWORD [-592+EBP]
	CALL	_timer_init
	ADD	ESP,12
	CMP	DWORD [-604+EBP],0
	JS	L10
	MOV	DWORD [-604+EBP],7
L10:
	PUSH	50
	PUSH	DWORD [-592+EBP]
	CALL	_timer_settime
	POP	ECX
	POP	ESI
	JMP	L7
L8:
	PUSH	1
	PUSH	ESI
	PUSH	DWORD [-592+EBP]
	CALL	_timer_init
	ADD	ESP,12
	CMP	DWORD [-604+EBP],0
	JS	L10
	MOV	DWORD [-604+EBP],0
	JMP	L10
L183:
	PUSH	DWORD [-596+EBP]
	CALL	_task_sleep
	CALL	_io_sti
	POP	EAX
	JMP	L2
	GLOBAL	_cons_newline
_cons_newline:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	ECX
	MOV	EAX,DWORD [20+EBP]
	ADD	EAX,12
	CMP	DWORD [8+EBP],EAX
	JAE	L197
	ADD	DWORD [8+EBP],16
L198:
	MOV	EAX,DWORD [8+EBP]
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L197:
	MOV	EDI,28
	CMP	EDI,EAX
	JAE	L220
L208:
	MOV	EAX,DWORD [16+EBP]
	MOV	ESI,8
	ADD	EAX,8
	MOV	DWORD [-16+EBP],EAX
	CMP	ESI,EAX
	JAE	L222
L207:
	MOV	EDX,DWORD [12+EBP]
	MOV	EAX,DWORD [12+EBP]
	MOV	ECX,DWORD [4+EDX]
	MOV	EBX,DWORD [EAX]
	LEA	EAX,DWORD [16+EDI]
	MOV	EDX,EDI
	IMUL	EAX,ECX
	IMUL	EDX,ECX
	LEA	EAX,DWORD [EAX+ESI*1]
	LEA	EDX,DWORD [EDX+ESI*1]
	INC	ESI
	MOV	AL,BYTE [EAX+EBX*1]
	MOV	BYTE [EDX+EBX*1],AL
	CMP	ESI,DWORD [-16+EBP]
	JB	L207
L222:
	MOV	EAX,DWORD [20+EBP]
	INC	EDI
	ADD	EAX,12
	CMP	EDI,EAX
	JB	L208
L220:
	MOV	EDI,DWORD [20+EBP]
	MOV	EAX,DWORD [20+EBP]
	ADD	EDI,12
	ADD	EAX,28
	CMP	EDI,EAX
	JAE	L224
L218:
	MOV	ECX,DWORD [16+EBP]
	MOV	ESI,8
	ADD	ECX,8
	CMP	ESI,ECX
	JAE	L226
L217:
	MOV	EDX,DWORD [12+EBP]
	MOV	EAX,EDI
	IMUL	EAX,DWORD [4+EDX]
	MOV	EDX,DWORD [EDX]
	LEA	EAX,DWORD [EAX+ESI*1]
	INC	ESI
	CMP	ESI,ECX
	MOV	BYTE [EAX+EDX*1],0
	JB	L217
L226:
	MOV	EAX,DWORD [20+EBP]
	INC	EDI
	ADD	EAX,28
	CMP	EDI,EAX
	JB	L218
L224:
	MOV	EAX,DWORD [20+EBP]
	ADD	EAX,28
	PUSH	EAX
	MOV	EAX,DWORD [16+EBP]
	ADD	EAX,8
	PUSH	EAX
	PUSH	28
	PUSH	8
	PUSH	DWORD [12+EBP]
	CALL	_sheet_refresh
	ADD	ESP,20
	JMP	L198
