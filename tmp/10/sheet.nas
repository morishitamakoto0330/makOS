[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_memman_alloc_4k
[FILE "sheet.c"]
[SECTION .text]
	GLOBAL	_shtctl_init
_shtctl_init:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	9232
	PUSH	DWORD [8+EBP]
	CALL	_memman_alloc_4k
	MOV	EDX,EAX
	POP	EAX
	POP	ECX
	TEST	EDX,EDX
	JE	L3
	MOV	EAX,DWORD [12+EBP]
	MOV	ECX,255
	MOV	DWORD [EDX],EAX
	MOV	EAX,DWORD [16+EBP]
	MOV	DWORD [4+EDX],EAX
	MOV	EAX,DWORD [20+EBP]
	MOV	DWORD [8+EDX],EAX
	LEA	EAX,DWORD [1068+EDX]
	MOV	DWORD [12+EDX],-1
L8:
	MOV	DWORD [EAX],0
	ADD	EAX,32
	DEC	ECX
	JNS	L8
L3:
	MOV	EAX,EDX
	LEAVE
	RET
	GLOBAL	_sheet_alloc
_sheet_alloc:
	PUSH	EBP
	XOR	EDX,EDX
	MOV	EBP,ESP
	MOV	EAX,DWORD [8+EBP]
	ADD	EAX,1040
L16:
	CMP	DWORD [28+EAX],0
	JE	L19
	INC	EDX
	ADD	EAX,32
	CMP	EDX,255
	JLE	L16
	XOR	EAX,EAX
L10:
	POP	EBP
	RET
L19:
	MOV	DWORD [28+EAX],1
	MOV	DWORD [24+EAX],-1
	JMP	L10
	GLOBAL	_sheet_setbuf
_sheet_setbuf:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EDX,DWORD [8+EBP]
	MOV	EAX,DWORD [12+EBP]
	MOV	DWORD [EDX],EAX
	MOV	EAX,DWORD [16+EBP]
	MOV	DWORD [4+EDX],EAX
	MOV	EAX,DWORD [20+EBP]
	MOV	DWORD [8+EDX],EAX
	MOV	EAX,DWORD [24+EBP]
	MOV	DWORD [20+EDX],EAX
	POP	EBP
	RET
	GLOBAL	_sheet_refreshsub
_sheet_refreshsub:
	PUSH	EBP
	XOR	EDX,EDX
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,40
	MOV	EAX,DWORD [8+EBP]
	MOV	ESI,DWORD [8+EBP]
	MOV	DWORD [-16+EBP],0
	MOV	EAX,DWORD [EAX]
	CMP	EDX,DWORD [12+ESI]
	MOV	DWORD [-40+EBP],EAX
	JG	L43
L41:
	MOV	EDI,DWORD [-16+EBP]
	MOV	EAX,DWORD [8+EBP]
	MOV	EBX,DWORD [16+EBP]
	MOV	ESI,DWORD [20+EBP]
	MOV	ECX,DWORD [16+EAX+EDI*4]
	MOV	EDI,DWORD [24+EBP]
	MOV	EDX,DWORD [ECX]
	MOV	EAX,DWORD [12+ECX]
	MOV	DWORD [-32+EBP],EDX
	SUB	ESI,EAX
	MOV	EDX,DWORD [16+ECX]
	MOV	DWORD [-52+EBP],ESI
	SUB	EDI,EDX
	SUB	EBX,EDX
	MOV	EDX,DWORD [12+EBP]
	MOV	DWORD [-44+EBP],EDI
	SUB	EDX,EAX
	MOV	DWORD [-28+EBP],EDX
	JS	L48
L26:
	TEST	EBX,EBX
	JS	L49
L27:
	MOV	EAX,DWORD [4+ECX]
	CMP	DWORD [-52+EBP],EAX
	JLE	L28
	MOV	DWORD [-52+EBP],EAX
L28:
	MOV	EAX,DWORD [8+ECX]
	CMP	DWORD [-44+EBP],EAX
	JLE	L29
	MOV	DWORD [-44+EBP],EAX
L29:
	CMP	EBX,DWORD [-44+EBP]
	JGE	L45
L40:
	MOV	ESI,DWORD [16+ECX]
	MOV	EDX,DWORD [-28+EBP]
	ADD	ESI,EBX
	CMP	EDX,DWORD [-52+EBP]
	MOV	DWORD [-24+EBP],ESI
	JGE	L47
L39:
	MOV	EAX,EBX
	MOV	EDI,DWORD [12+ECX]
	IMUL	EAX,DWORD [4+ECX]
	ADD	EDI,EDX
	MOV	ESI,DWORD [-32+EBP]
	ADD	EAX,EDX
	MOV	DWORD [-20+EBP],EDI
	MOV	AL,BYTE [EAX+ESI*1]
	MOV	BYTE [-33+EBP],AL
	MOVZX	EAX,AL
	CMP	EAX,DWORD [20+ECX]
	JE	L36
	MOV	EDI,DWORD [8+EBP]
	MOV	EAX,DWORD [-24+EBP]
	MOV	ESI,DWORD [-40+EBP]
	IMUL	EAX,DWORD [4+EDI]
	ADD	EAX,DWORD [-20+EBP]
	MOV	DWORD [-48+EBP],EAX
	MOV	AL,BYTE [-33+EBP]
	MOV	EDI,DWORD [-48+EBP]
	MOV	BYTE [EDI+ESI*1],AL
L36:
	INC	EDX
	CMP	EDX,DWORD [-52+EBP]
	JL	L39
L47:
	INC	EBX
	CMP	EBX,DWORD [-44+EBP]
	JL	L40
L45:
	MOV	EDX,DWORD [8+EBP]
	INC	DWORD [-16+EBP]
	MOV	EAX,DWORD [-16+EBP]
	CMP	EAX,DWORD [12+EDX]
	JLE	L41
L43:
	ADD	ESP,40
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L49:
	XOR	EBX,EBX
	JMP	L27
L48:
	MOV	DWORD [-28+EBP],0
	JMP	L26
	GLOBAL	_sheet_updown
_sheet_updown:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	ESI,DWORD [8+EBP]
	PUSH	EBX
	MOV	EDI,DWORD [12+EBP]
	MOV	EBX,DWORD [16+EBP]
	MOV	EDX,DWORD [12+ESI]
	INC	EDX
	MOV	EAX,DWORD [24+EDI]
	CMP	EBX,EDX
	JLE	L51
	MOV	EBX,EDX
L51:
	CMP	EBX,-1
	JGE	L52
	OR	EBX,-1
L52:
	MOV	DWORD [24+EDI],EBX
	CMP	EAX,EBX
	JLE	L53
	TEST	EBX,EBX
	JS	L54
	MOV	ECX,EAX
L59:
	MOV	EAX,DWORD [12+ESI+ECX*4]
	MOV	DWORD [16+ESI+ECX*4],EAX
	MOV	DWORD [24+EAX],ECX
	DEC	ECX
	CMP	ECX,EBX
	JG	L59
L85:
	MOV	DWORD [16+ESI+EBX*4],EDI
L67:
	MOV	ECX,DWORD [16+EDI]
	MOV	EAX,ECX
	ADD	EAX,DWORD [8+EDI]
	PUSH	EAX
	MOV	EDX,DWORD [12+EDI]
	MOV	EAX,EDX
	ADD	EAX,DWORD [4+EDI]
	PUSH	EAX
	PUSH	ECX
	PUSH	EDX
	PUSH	ESI
	CALL	_sheet_refreshsub
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L54:
	MOV	EDX,DWORD [12+ESI]
	CMP	EDX,EAX
	JLE	L61
	MOV	ECX,EAX
	CMP	EAX,EDX
	JGE	L61
L66:
	MOV	EAX,DWORD [20+ESI+ECX*4]
	MOV	DWORD [16+ESI+ECX*4],EAX
	MOV	DWORD [24+EAX],ECX
	INC	ECX
	CMP	ECX,DWORD [12+ESI]
	JL	L66
L61:
	DEC	DWORD [12+ESI]
	JMP	L67
L53:
	CMP	EAX,EBX
	JGE	L67
	TEST	EAX,EAX
	JS	L69
	MOV	ECX,EAX
	CMP	EAX,EBX
	JGE	L85
L74:
	MOV	EAX,DWORD [20+ESI+ECX*4]
	MOV	DWORD [16+ESI+ECX*4],EAX
	MOV	DWORD [24+EAX],ECX
	INC	ECX
	CMP	ECX,EBX
	JL	L74
	JMP	L85
L69:
	MOV	ECX,DWORD [12+ESI]
	CMP	ECX,EBX
	JL	L87
L80:
	MOV	EDX,DWORD [16+ESI+ECX*4]
	LEA	EAX,DWORD [1+ECX]
	MOV	DWORD [20+ESI+ECX*4],EDX
	DEC	ECX
	MOV	DWORD [24+EDX],EAX
	CMP	ECX,EBX
	JGE	L80
L87:
	MOV	DWORD [16+ESI+EBX*4],EDI
	INC	DWORD [12+ESI]
	JMP	L67
	GLOBAL	_sheet_refresh
_sheet_refresh:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EDI
	MOV	EDX,DWORD [12+EBP]
	MOV	EAX,DWORD [8+EBP]
	MOV	DWORD [-16+EBP],EAX
	MOV	EDI,DWORD [16+EBP]
	MOV	ESI,DWORD [20+EBP]
	MOV	EBX,DWORD [24+EBP]
	MOV	EAX,DWORD [28+EBP]
	CMP	DWORD [24+EDX],0
	JS	L88
	MOV	ECX,DWORD [16+EDX]
	MOV	EDX,DWORD [12+EDX]
	LEA	EAX,DWORD [EAX+ECX*1]
	ADD	ECX,ESI
	MOV	DWORD [24+EBP],EAX
	MOV	DWORD [16+EBP],ECX
	LEA	EAX,DWORD [EBX+EDX*1]
	ADD	EDX,EDI
	MOV	DWORD [20+EBP],EAX
	MOV	DWORD [12+EBP],EDX
	POP	ESI
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_sheet_refreshsub
L88:
	POP	EBX
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_sheet_slide
_sheet_slide:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	MOV	EDI,DWORD [16+EBP]
	MOV	EBX,DWORD [12+EBP]
	MOV	ESI,DWORD [20+EBP]
	MOV	ECX,DWORD [12+EBX]
	MOV	EDX,DWORD [16+EBX]
	MOV	DWORD [12+EBX],EDI
	MOV	DWORD [16+EBX],ESI
	CMP	DWORD [24+EBX],0
	JS	L90
	MOV	EAX,EDX
	ADD	EAX,DWORD [8+EBX]
	PUSH	EAX
	MOV	EAX,ECX
	ADD	EAX,DWORD [4+EBX]
	PUSH	EAX
	PUSH	EDX
	PUSH	ECX
	PUSH	DWORD [8+EBP]
	CALL	_sheet_refreshsub
	MOV	EAX,ESI
	ADD	EAX,DWORD [8+EBX]
	PUSH	EAX
	MOV	EAX,EDI
	ADD	EAX,DWORD [4+EBX]
	PUSH	EAX
	PUSH	ESI
	PUSH	EDI
	PUSH	DWORD [8+EBP]
	CALL	_sheet_refreshsub
	ADD	ESP,40
L90:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_sheet_free
_sheet_free:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EBX
	MOV	EBX,DWORD [12+EBP]
	CMP	DWORD [24+EBX],0
	JS	L93
	PUSH	-1
	PUSH	EBX
	PUSH	DWORD [8+EBP]
	CALL	_sheet_updown
	ADD	ESP,12
L93:
	MOV	DWORD [28+EBX],0
	MOV	EBX,DWORD [-4+EBP]
	LEAVE
	RET
